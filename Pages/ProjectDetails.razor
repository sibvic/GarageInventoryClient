@page "/project/{ProjectId:int}"
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Project Details</PageTitle>

@if (project == null)
{
    <p><em>Loading project...</em></p>
}
else
{
    <h2>@project.Name <button class="btn btn-outline-secondary" @onclick="GotoEditProject">Edit Project</button></h2>
    <p>Created: @project.CreationDate.ToString("u")</p>
    <p>Price: @project.Price</p>
}

@if (items == null)
{
    <p><em>Loading items...</em></p>
}
else if (items.Count == 0)
{
    <p>No items in this project.</p>
}
else
{
    <div class="d-flex align-items-center mb-2">
        <h3 class="mb-0 me-2">Items</h3>
        <button class="btn btn-sm btn-primary" @onclick="GotoAddItem">+</button>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Manufacturer #</th>
                <th>SKU</th>
                <th>In Price</th>
                <th>Out Price</th>
                <th>Status</th>
                <th>Description</th>
                <th>Location</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.ManufacturerNumber</td>
                    <td>@item.Sku</td>
                    <td>@item.InPrice</td>
                    <td>@item.OutPrice<br/>@(item.OutDate?.ToString("u"))</td>
                    <td>@item.Status</td>
                    <td>@item.Description</td>
                    <td>@item.Location?.Name</td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary" @onclick="() => EditItem(item.Id)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int ProjectId { get; set; }
    private ProjectDto? project;
    private List<ItemDto>? items;

    protected override async Task OnInitializedAsync()
    {
        project = await Http.GetFromJsonAsync<ProjectDto>($"/projects/{ProjectId}");
        items = await Http.GetFromJsonAsync<List<ItemDto>>($"/items?projectId={ProjectId}") ?? new();
    }

    private void GotoAddItem()
    {
        Navigation.NavigateTo($"/projects/{ProjectId}/items/add");
    }

    private void GotoEditProject()
    {
        Navigation.NavigateTo($"/project/{ProjectId}/edit");
    }

    private void EditItem(int itemId)
    {
        Navigation.NavigateTo($"/projects/{ProjectId}/items/{itemId}/edit");
    }
} 